@{
    ViewData["Title"] = "Chọn ghế";
    var chuyenXe = ViewBag.ChuyenXe;
    var danhSachGhe = ViewBag.DanhSachGhe as IEnumerable<dynamic>;
    int soGhe = ViewBag.SoGhe ?? 0;
    int soGheTren = soGhe / 2;
    var giaVe = chuyenXe?.GiaVe ?? 0;

}

<link rel="stylesheet" href="~/css/selectSeat.css" />

<h2 class="title">Chọn ghế và điền thông tin</h2>

<div class="legend">
    <div><span class="legend-icon available"></span> Còn trống</div>
    <div><span class="legend-icon occupied"></span> Đã đặt</div>
    <div><span class="legend-icon selected"></span> Đang chọn</div>
</div>


<h3>Tầng trên</h3>
<div class="seat-map-container">
    @foreach (var ghe in danhSachGhe.Take(soGheTren))
    {
        var gd = (bool?)ghe.Trangthai ?? false;
        <button class="seat @(gd ? "seat-occupied" : "seat-available")"
        @(gd ? "disabled" : "")
                data-id="@ghe.IdVitri"
                title="Ghế @ghe.Tenvitri @(gd ? "(Đã đặt)" : "(Còn trống)")">
            @ghe.Tenvitri
        </button>
    }
</div>


<h3>Tầng dưới</h3>
<div class="seat-map-container">
    @foreach (var ghe in danhSachGhe.Skip(soGheTren))
    {
        var gd = (bool?)ghe.Trangthai ?? false;
        <button class="seat @(gd ? "seat-occupied" : "seat-available")"
        @(gd ? "disabled" : "")
                data-id="@ghe.IdVitri"
                title="Ghế @ghe.Tenvitri @(gd ? "(Đã đặt)" : "(Còn trống)")">
            @ghe.Tenvitri
        </button>
    }
</div>
<div class="terms">
    <h3>Thông tin lượt đi</h3>
    <p>Thời gian xuất bến: @chuyenXe.ThoiDiemKhoiHanh.ToString("HH:mm dd/MM/yyyy")</p>
    <p>Giá vé/1g: @chuyenXe.GiaVe.ToString("N0") VND</p>
    <div class="total-price">
        <h6>Tổng tiền: <span id="totalPrice">0</span> VND</h6>
    </div>

</div>

<h2>Điền thông tin cá nhân</h2>
<div class="ticket-container">
    <form method="post" asp-action="BookTickets" class="ticket-form" onsubmit="return validateForm();">
        <input type="hidden" name="maChuyen" value="@ViewBag.MaChuyen" />
        <input type="hidden" id="selectedSeatsInput" name="selectedSeats" />

        <div class="form-group">
            <label for="tenKhachHang">Tên khách hàng</label>
            <input type="text" id="tenKhachHang" name="tenKhachHang" class="form-control" required />
        </div>
        <div class="form-group">
            <label for="soDienThoai">Số điện thoại</label>
            <input type="text" id="soDienThoai" name="soDienThoai" class="form-control" pattern="^[0-9]{10}$" required />
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" class="form-control" required />
        </div>
        <div class="form-group">
            <label for="ghiChu">Ghi chú</label>
            <textarea id="ghiChu" name="ghiChu" class="form-control"></textarea>
        </div>
        <button type="submit" class="btn btn-primary" style="margin-top: 20px;">Đặt vé</button>
    </form>
    <div class="terms">
        <h5>Điều khoản & lưu ý</h5>
        <p>
            (*) Quý khách vui lòng có mặt tại bến xuất phát của xe trước ít nhất 30 phút giờ xe khởi hành.
            Liên hệ tổng đài <b>1548 4565</b> để được hỗ trợ.
        </p>
        <p>
            (*) Nếu quý khách có nhu cầu trung chuyển, vui lòng liên hệ Tổng đài trung chuyển <b>1548 4565</b>
            trước khi đặt vé. Chúng tôi không đón/trung chuyển tại những điểm xe trung chuyển không thể tới được.
        </p>
    </div>
</div>

<!-- Success Modal -->
<div id="successModal" class="modal" style="height:350px;">
    <div class="modal-content">
        <span class="close-btn">&times;</span>
        <div class="modal-body">
            <h3>Đặt vé thành công!</h3>

            <p>Cảm ơn bạn đã đặt vé, vui lòng thanh toán trước khi lên xe!</p>
        </div>
        <button id="closeModal" class="btn btn-success">Đóng</button>
    </div>
</div>

<script>
    const seatButtons = document.querySelectorAll(".seat-available");
    const selectedSeats = new Set(); // Dùng Set để lưu ID ghế đã chọn
    const seatInput = document.getElementById("selectedSeatsInput");
    const maxSeats = 30;
    const priceGV = @giaVe;
    const Tatol = document.getElementById("totalPrice");


    
    seatButtons.forEach(button => {
        button.addEventListener("click", function (e) {
            e.preventDefault();

            const seatId = this.dataset.id;

            if (selectedSeats.has(seatId)) {
               
                selectedSeats.delete(seatId);
                this.classList.remove("selected");
            } else {
                
               
                if (selectedSeats.size >= maxSeats) {
                    alert(`Số ghế còn lại chỉ ${maxSeats} ghế. Nên không thể chọn nhiều thêm`);
                    return; 
                }
                

                selectedSeats.add(seatId);
                this.classList.add("selected");
            }
           updateTotalPrice();
        });
    });

        function updateTotalPrice() {
        const totalPrice = selectedSeats.size * priceGV;
        Tatol.innerText = totalPrice.toLocaleString();
    }


    function validateForm() {
        if (selectedSeats.size === 0) {
            alert("Vui lòng chọn ít nhất một ghế.");
            return false;
        }

     
        seatInput.value = Array.from(selectedSeats).join(",");

        return true;
    }

   
    const modal = document.getElementById("successModal");
    const closeModalBtn = document.getElementById("closeModal");

    closeModalBtn.addEventListener("click", () => {
        modal.style.display = "none";
    });

    @if (TempData["ShowModal"] != null)
    {
        <text>
                document.getElementById('successModal').style.display = 'flex';
        </text>
    }
</script>
